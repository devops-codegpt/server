// Code generated by MockGen. DO NOT EDIT.
// Source: .\service\role.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	models "github.com/devops-codegpt/server/models"
	request "github.com/devops-codegpt/server/request"
	gomock "go.uber.org/mock/gomock"
)

// MockRoleService is a mock of RoleService interface.
type MockRoleService struct {
	ctrl     *gomock.Controller
	recorder *MockRoleServiceMockRecorder
}

// MockRoleServiceMockRecorder is the mock recorder for MockRoleService.
type MockRoleServiceMockRecorder struct {
	mock *MockRoleService
}

// NewMockRoleService creates a new mock instance.
func NewMockRoleService(ctrl *gomock.Controller) *MockRoleService {
	mock := &MockRoleService{ctrl: ctrl}
	mock.recorder = &MockRoleServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoleService) EXPECT() *MockRoleServiceMockRecorder {
	return m.recorder
}

// CreateRole mocks base method.
func (m *MockRoleService) CreateRole(req *request.RoleCreate) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRole", req)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateRole indicates an expected call of CreateRole.
func (mr *MockRoleServiceMockRecorder) CreateRole(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRole", reflect.TypeOf((*MockRoleService)(nil).CreateRole), req)
}

// FindAllRoles mocks base method.
func (m *MockRoleService) FindAllRoles(req *request.RoleList) ([]*models.Role, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllRoles", req)
	ret0, _ := ret[0].([]*models.Role)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAllRoles indicates an expected call of FindAllRoles.
func (mr *MockRoleServiceMockRecorder) FindAllRoles(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllRoles", reflect.TypeOf((*MockRoleService)(nil).FindAllRoles), req)
}

// UpdateById mocks base method.
func (m *MockRoleService) UpdateById(id uint, req *request.RoleUpdate) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateById", id, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateById indicates an expected call of UpdateById.
func (mr *MockRoleServiceMockRecorder) UpdateById(id, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateById", reflect.TypeOf((*MockRoleService)(nil).UpdateById), id, req)
}
